server:
  port: 8080

spring:
  application:
    name: SpringBoot
  datasource:
    username: root
    password: root
    url: jdbc:mysql://localhost:3306/springbootprojectDemo
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

springdoc:
  swagger-ui:
    path: /swagger-ui.html

kafka:
  bootstrap-servers: localhost:9092
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer

#    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  consumer:
    group-id: testing-kafka
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#    properties:
#      spring:
#        json:
#          trusted:
#            packages: com.DemoProject.SpringBoot.kafkaModel


#kafka:
#  bootstrap-servers: localhost:9092
#  producer:
#    key-serializer: org.apache.kafka.common.serialization.StringSerializer
#    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#  consumer:
#    group-id: testing-kafka
#    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#    properties:
#      spring:
#        json:
#          trusted:
#            packages: com.DemoProject.SpringBoot.kafkaModel

# Advanced cloud managed properties:
#  properties:
#    security:
#      protocol: SASL_SSL
#    sasl:
#      mechanism: PLAIN
#      jaas:
#        config: org.apache.kafka.common.security.plain.PlainLoginModule required username='xxxxx' password='xxxxxxxxxxxxxx';
#    session:
#      timeout:
#        ms: 45000